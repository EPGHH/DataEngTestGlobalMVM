{
	"name": "integracion",
	"properties": {
		"description": "Hace la integraci√≥n de los datos que llegan",
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkProccess",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "db82a76e-37ea-46e6-ad67-57dfb04c2697"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/04162a89-7321-4aeb-b7f1-e0bcd6c7bbdb/resourceGroups/rg_data_eng_globalmvm/providers/Microsoft.Synapse/workspaces/ws-synapse-data-eng-globalmvm/bigDataPools/SparkProccess",
				"name": "SparkProccess",
				"type": "Spark",
				"endpoint": "https://ws-synapse-data-eng-globalmvm.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkProccess",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import col, current_timestamp"
				],
				"execution_count": 41
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"ruta = 'abfss://masterdata@accountdatalake.dfs.core.windows.net/department/*'\r\n",
					"df = spark.read.load(ruta, format='parquet')\r\n",
					"df.show()\r\n",
					"#df.write.mode(\"overwrite\").saveAsTable(\"default.YourTableName\")"
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = df.orderBy(col(\"departament_name\").desc())\r\n",
					"df = df.dropDuplicates([\"departament_id\"])\r\n",
					"df = df.withColumn(\"last_modified_date\", current_timestamp())\r\n",
					"df.show(truncate=False)"
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"ruta = 'abfss://masterdata@accountdatalake.dfs.core.windows.net/department/'\r\n",
					"# Escribe los datos en formato Parquet\r\n",
					"df.write.mode(\"overwrite\").parquet(ruta)"
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.show(truncate=False)"
				],
				"execution_count": 42
			}
		]
	}
}